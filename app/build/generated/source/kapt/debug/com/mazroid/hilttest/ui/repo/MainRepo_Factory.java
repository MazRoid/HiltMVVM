// Generated by Dagger (https://dagger.dev).
package com.mazroid.hilttest.ui.repo;

import com.google.gson.Gson;
import com.mazroid.hilttest.MyApplication;
import com.mazroid.hilttest.database.AppDatabase;
import com.mazroid.hilttest.network.NetworkServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainRepo_Factory implements Factory<MainRepo> {
  private final Provider<NetworkServices> networkServicesProvider;

  private final Provider<AppDatabase> appDatabaseProvider;

  private final Provider<MyApplication> myApplicationProvider;

  private final Provider<Gson> gsonProvider;

  public MainRepo_Factory(Provider<NetworkServices> networkServicesProvider,
      Provider<AppDatabase> appDatabaseProvider, Provider<MyApplication> myApplicationProvider,
      Provider<Gson> gsonProvider) {
    this.networkServicesProvider = networkServicesProvider;
    this.appDatabaseProvider = appDatabaseProvider;
    this.myApplicationProvider = myApplicationProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public MainRepo get() {
    return newInstance(networkServicesProvider.get(), appDatabaseProvider.get(), myApplicationProvider.get(), gsonProvider.get());
  }

  public static MainRepo_Factory create(Provider<NetworkServices> networkServicesProvider,
      Provider<AppDatabase> appDatabaseProvider, Provider<MyApplication> myApplicationProvider,
      Provider<Gson> gsonProvider) {
    return new MainRepo_Factory(networkServicesProvider, appDatabaseProvider, myApplicationProvider, gsonProvider);
  }

  public static MainRepo newInstance(NetworkServices networkServices, AppDatabase appDatabase,
      MyApplication myApplication, Gson gson) {
    return new MainRepo(networkServices, appDatabase, myApplication, gson);
  }
}
